@import "null.scss";
@import "mixins.scss";
@import "ui.scss";
@import "anim.scss";

// Добавление шрифтов
@import "fonts.scss";
// Добавление шрифтов

.wrapper {
	min-height: 100%;
	overflow: hidden;
}
.page {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	@include flexbox();
	flex-direction: column;
}
.backgr {
	position: relative;
	flex: 1 0 100%;
	&__bg {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
	}
}

.content_backgr {
	position: relative;
	flex: 1 0 100%;
	top: 0;
	left: 0;

	&__bg {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		background: rgb(2, 0, 36);
		background: linear-gradient(
			90deg,
			rgba(2, 0, 36, 1) 0%,
			rgba(0, 0, 255, 0.815) 27%,
			rgba(0, 212, 255, 1) 100%
		);
	}
}

.content {
	font-size: 0;
}

// Header

// .header {
// 	position: absolute;
// 	right: 0;
// 	top: 0;
// }
// .header_row {
// 	flex: 1 1 100%;
// 	max-width: 100%;
// 	position: relative;
// 	max-height: 100%;
// 	z-index: 5;
// 	left: 0;
// 	top: 0;
// }
// @media (max-height: 830px) {
// 	.header_row {
// 		max-height: 40%;
// 	}
// }
// @media (max-height: 630px) {
// 	.header_row {
// 		max-height: 20%;
// 	}
// }

// .header_links {
// 	min-height: 100%;
// 	min-width: 100%;
// 	@include flexbox();
// 	justify-content: space-between;
// 	align-items: center;
// 	padding: 100px;
// 	margin: -35px 30px 0 -35px;
// 	-webkit-transform: rotate(90deg); /* разворот текста для разных браузеров */
// 	-moz-transform: rotate(90deg);
// 	-ms-transform: rotate(90deg);
// 	-o-transform: rotate(90deg);
// 	transform: rotate(0deg);
// 	writing-mode: tb-rl;

// 	li {
// 		font-family: "Permanent Marker", cursive;
// 		color: white;
// 		@include flexbox();
// 		margin: 40px 0;
// 		align-items: center;
// 		justify-content: space-between;
// 		font-size: 45px;
// 		font-weight: 400;
// 		text-align: center;
// 	}
// 	& li:last-child {
// 		margin: 0;
// 	}
// }

// @media (max-height: 870px) {
// 	.header_links li {
// 		font-size: 37px;
// 	}
// }
// @media (max-height: 770px) {
// 	.header_links li {
// 		font-size: 30px;
// 	}
// }
// @media (max-height: 690px) {
// 	.header_links li {
// 		font-size: 25px;
// 	}
// }
// @media (max-height: 660px) {
// 	.header_links li {
// 		margin: 20px 0;
// 	}
// 	.header_links {
// 		padding: 40px;
// 	}
// }

// @media (max-height: 650px) {
// 	.header {
// 		min-width: 300px;
// 		min-height: 700px;
// 	}
// 	.header_row {
// 		-webkit-transform: rotate(270deg); /* разворот текста для разных браузеров */
// 		-moz-transform: rotate(270deg);
// 		-ms-transform: rotate(270deg);
// 		-o-transform: rotate(270deg);
// 		transform: rotate(270deg);
// 		writing-mode: lr-tb;
// 		display: inline-flex;
// 		width: 100%;
// 		height: 100%;
// 	}
// 	.header_links {
// 		position: absolute;
// 		z-index: 10;
// 		top: 0;
// 		left: 0;
// 		display: inline-flex;
// 		flex-direction: column;
// 		transform: translate(-286px, -30px);

// 		li {
// 			display: flex;
// 			align-items: center;
// 			font-size: 30px;
// 			margin: 0 0 0 60px;
// 		}
// 	}
// }

// @media (max-width: 375px) {

// 	.header_links {
// 		display: inline-flex;
// 		-webkit-transform: rotate(270deg); /* разворот текста для разных браузеров */
// 		-moz-transform: rotate(270deg);
// 		-ms-transform: rotate(270deg);
// 		-o-transform: rotate(270deg);
// 		transform: rotate(0deg);

// 		li{
// 			writing-mode: lr-tb;

// 		}
// 	}
// }

// /Header

.header {
	position: absolute;
	width: 100%;
	z-index: 50;
	&_row {
		@include flexbox();
		justify-content: center;
		align-items: center;
		height: 150px;
	}

	&_menu {
	}

	&_logo {
		position: absolute;
		top: -15%;
		left: 46%;
		@include tr(-40%, 0, 0);

		animation-name: wheel;
		animation-duration: 5s;
		animation-timing-function: ease-in-out; // сценарий развития анимации между ключевыми кадрами
		animation-iteration-count: infinite; // кол-во проигрывания анимациии или бесконечность infinite
		animation-direction: alternate; //Тип и направления проигрывания анимации - alternate(каждый чётный), alternate-reverse, reverse - задом наперёд
		animation-play-state: running; //Состояние анимации none/running/paused
		animation-delay: 0s; //Время до начала анимации, можно указать отрицательные значение
		animation-fill-mode: none; // Определяет, какие стили должны применяться к элементу, когда анимация не проигрывается. Например, после её завершения или при останов
	}
	@keyframes wheel {
		from {
			transform: rotate(0);
		}
		to {
			transform: rotate(1turn);
		}
	}
}
.menu {
	&_icon {
	}

	&_body {
	}

	&__list {
		@include flexbox();
		justify-content: center;
		align-items: center;

		li {
			position: relative;
			padding: 0px 30px;

			&:nth-child(2) {
				padding: 0 100px 0 30px;
			}
			&:nth-child(3) {
				padding: 0 30px 0 100px;
			}

			&:after {
				content: "";
				position: absolute;
				z-index: 30;
				width: 4px;
				height: 4px;
				background-color: black;
				border-radius: 50%;
				right: 0;
				top: 50%;
			}
			&:last-child {
				&::after {
					display: none;
				}
			}
			&:nth-child(2) {
				&::after {
					display: none;
				}
			}
		}
	}

	&__link {
		font-family: "Permanent Marker", cursive;
		color: rgb(255, 230, 0);
		font-size: 30px;
		letter-spacing: 2.5px;

		//anim
		animation-name: text;
		animation-duration: 2.5s;
		animation-timing-function: ease-in-out; // сценарий развития анимации между ключевыми кадрами
		animation-iteration-count: infinite; // кол-во проигрывания анимациии или бесконечность infinite
		animation-direction: alternate; //Тип и направления проигрывания анимации - alternate(каждый чётный), alternate-reverse, reverse - задом наперёд
		animation-play-state: running; //Состояние анимации none/running/paused
		animation-delay: 0s; //Время до начала анимации, можно указать отрицательные значение
		animation-fill-mode: none; // Определяет, какие стили должны применяться к элементу, когда анимация не проигрывается. Например, после её завершения или при останов
	}
	@keyframes text {
		0% {
			color: black;
		}
		50% {
			text-shadow: 0 0 10px black;
		}
		100% {
			font-weight: 700;
			color: rgb(21, 228, 243);
			text-shadow: 0 0 20px black;
		}
	}
}

.header {
	&_title {
		width: 100%;
		font-family: Permanent Marker, cursive;
		position: absolute;
		left: 50%;
		top: 250px;
		@include tr(-50%, 0, 0);
		color: rgb(255, 255, 10);
	}
}
.title {
	text-align: center;
	word-spacing: 240px;
	letter-spacing: 4px;
	font-weight: 500;
	font-size: 180px;
	display: flex;
	justify-content: space-evenly;

	transform: translate(0, 120%);
	transition: all 1s ease 0s;
	opacity: 0;

	&._active {
		text-shadow: 0 0 40px yellow;
		transform: translate(0px, 0px);
		opacity: 1;
		transition: all 1s ease 0s;
	}
}
